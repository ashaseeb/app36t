[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-10-23 17:50:37.360728",
  "module": null,
  "name": "ApplicantProfile_InsertRecordInOtherDocType",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Applicant Profile",
  "script": "#frappe.msgprint(doc.last_name);\n\ncust=frappe.get_doc({\n    'doctype':'Task',\n    'subject':doc.first_name+\" \"+doc.last_name,\n    'status':'Open'\n})\ncust.insert()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-10-24 13:06:21.649333",
  "module": null,
  "name": "ApplicantProfile_DuplicateSkillCheck",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Applicant Profile",
  "script": "skillsInChildTable = doc.get(\"applicant_skills\")\nskills_set = set()\nskills_duplicated = set()\nskills_duplicated_row = set()\n\n###Loop for all rows in child table\nfor row in skillsInChildTable:\n    if row.skill in skills_set:\n        #frappe.throw(f\"Duplicate skill found: {row.skill}\")\n        #skills_duplicated_row.add(row.idx)\n        #skills_duplicated.add(row.skill)\n        skills_duplicated.add(row.skill+\" on row#\"+str(row.idx))\n        \n    skills_set.add(row.skill)\n    \n###Validation for duplicate Skills in Child Table\nif (bool(skills_duplicated)):\n    #frappe.throw(f\"Duplicate skill found: {dSkill}, On row numbers: {skills_duplicated_row}\")\n    dSkill=sorted(skills_duplicated)\n    frappe.throw(f\"Duplicate skill found:</br> {dSkill}\")\n\n###Validation for Skill Child Table should not be empty\nif (not bool(skills_set)):\n    frappe.throw(f\"Skill cannot be empty, please choose at least one skill to proceed!\")\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-10-24 13:06:21.687383",
  "module": null,
  "name": "ApplicantProfile_AddTaskIfNotExistsUsingDBQueryToCheck",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Applicant Profile",
  "script": "#dtResult = frappe.db.get_list(\"Task\")\n#dtResult = frappe.db.get_list(\"Task\",filters={'status':'Working'})\n#dtResult = frappe.db.get_list(\"Task\",filters={'status':'Working'}, fields=['subject', 'status','creation'])\n#dtResult = frappe.db.get_list(\"Task\",filters={'status':['=','Open']}, fields=['subject', 'status','creation'])\n#dtResult = frappe.db.get_list(\"Task\",filters={'status':['like','%Open%']}, fields=['subject', 'status','creation'])\n#dtResult = frappe.db.get_list(\"Task\",filters=[['status', 'IN', ['Open', 'Working']]], fields=['subject', 'status','creation'])\n\ndesc=''\ndtResult = frappe.db.get_list(\"Task\",filters={'subject':doc.first_name+' '+doc.last_name}, fields=['name', 'description'])\n\nif (not dtResult): #RECORD FOUND\n    #frappe.msgprint('Found in Task:'+doc.first_name+' '+doc.last_name)\n    cust=frappe.get_doc({\n        'doctype':'Task',\n        'subject':doc.first_name+\" \"+doc.last_name,\n        'status':'Open'\n    })\n    cust.insert()\nelse: #RECORD NOT FOUND\n    frappe.log(dtResult[0])\n    desc=f'{dtResult[0].description or \"\"} </br>Auto Created Task From \"Application Profile\" Doctype $ Last Updated On:'+str(frappe.utils.now_datetime())\n    #frappe.log(dtResult[0].name)\n    #frappe.log(desc)\n    frappe.db.set_value('Task',dtResult[0].name,'description', desc)\n#frappe.throw(\"Finished called frappe.throw\")\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-10-24 06:55:01.304979",
  "module": null,
  "name": "ApplicantProfile_DoAIAnalysisOnProfile",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Applicant Profile",
  "script": "#import http.client\n#import json\n#conn = http.client.HTTPSConnection(\"generativelanguage.googleapis.com\")\n#payload = json.dumps({\n#  \"contents\": [\n#    {\n#     \"parts\": [\n#        {\n#          \"text\": \"list down all the cities in texas USA\"\n#        }\n#      ]\n#    }\n#  ]\n#})\n#headers = {\n#  'Content-Type': 'application/json'\n#}\n#conn.request(\"POST\", \"/v1beta/models/gemini-1.5-flash-latest:generateContent?key=AIzaSyBH7fT0807PImOtzCDcJL4pVKAWAuJh73g\", payload, headers)\n#res = conn.getresponse()\n#data = res.read()\n#frappe.log(data.decode(\"utf-8\"))\n\n\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-10-24 13:06:21.675616",
  "module": null,
  "name": "ApplicantProfile_AddingMyComments",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Applicant Profile",
  "script": "doc.add_comment('Comment', 'This record was automatically commented on creation using server scipt by ERPNext UI SERVER-SCRIPT-NAME:ApplicantProfile_AddingMyComments')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-10-19 07:46:27.040093",
  "module": "Applicant36t",
  "name": "ApplicantProfile_ForFixturesExport",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Applicant Profile",
  "script": "frappe.msgprint(\"Called Server_Script Before Save Event\");\n",
  "script_type": "DocType Event"
 }
]