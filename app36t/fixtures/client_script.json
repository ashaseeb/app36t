[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Applicant Profile",
  "enabled": 1,
  "modified": "2024-10-24 13:05:27.964280",
  "module": null,
  "name": "ApplicantProfile_CustomButtonForAddComments",
  "script": "frappe.ui.form.on('Applicant Profile', {\n    refresh: function(frm) {\n        // Function to get the first name from full name\n        const getFirstName = fullName => (fullName+' ').split(' ')[0];\n\n        // Ensure the custom comments section exists in the sidebar\n        if (!$('.custom-comments-section').length) {\n            $('<div class=\"custom-comments-section\"></div>').appendTo('.form-sidebar');\n        }\n\n        // Remove duplicate add comment buttons\n        $('.add-comment-button').remove();\n\n        // Add a button to the sidebar to add a new comment\n        const add_comment_button_html = `\n            <div class=\"add-comment-button\">\n                <button class=\"btn btn-primary btn-sm btn-add-comment\">\n                    <i class=\"octicon octicon-plus\"></i> Add Comment\n                </button>\n            </div><br>\n        `;\n        $(add_comment_button_html).insertBefore('.custom-comments-section');\n\n        // Function to add or update comment in custom sidebar section\n        const addOrUpdateComment = (comment_id, comment, user_fullname) => {\n            const first_name = getFirstName(user_fullname);\n            let $comment = $(`.comment[data-comment-id=\"${comment_id}\"]`);\n            \n            if ($comment.length) {\n                $comment.find('.comment-text').html(comment); // Preserve HTML formatting\n                $comment.find('.comment-by').text(first_name);\n            } else {\n                const comment_html = `\n                    <div class=\"comment\" data-comment-id=\"${comment_id}\">\n                        <div class=\"comment-body\">\n                            <b class=\"comment-by\">${first_name}</b>: <span class=\"comment-text\">${comment}</span>\n                        </div>\n                        <div class=\"comment-actions\">\n                            <a href=\"#\" class=\"edit-comment btn btn-link btn-xs\"><i class=\"fa fa-edit\"></i></a>\n                            <a href=\"#\" class=\"delete-comment btn btn-link btn-xs\"><i class=\"fa fa-trash-o\"></i></a>\n                        </div>\n                    </div>\n                `;\n                $('.custom-comments-section').append(comment_html);\n            }\n        };\n\n        // Event handler for adding a new comment\n        $(document).off('click', '.btn-add-comment').on('click', '.btn-add-comment', function() {\n            frappe.prompt(\n                [{ fieldtype: 'Text Editor', fieldname: 'comment', label: 'Comment', reqd: 1 }],\n                values => {\n                    frappe.call({\n                        method: \"frappe.desk.form.utils.add_comment\",\n                        args: {\n                            reference_doctype: frm.doc.doctype,\n                            reference_name: frm.doc.name,\n                            content: values.comment,\n                            comment_email: frappe.session.user,\n                            comment_by: frappe.session.user_fullname\n                        },\n                        callback: r => {\n                            if (!r.exc) {\n                                addOrUpdateComment(r.message.name, values.comment, frappe.session.user_fullname);\n                                frappe.show_alert({ message: __('Comment added successfully'), indicator: 'green' });\n                                frm.reload_doc(); // Refresh the form after adding a comment\n                            }\n                        }\n                    });\n                },\n                __('Add a Comment'),\n                __('Submit')\n            );\n        });\n\n        // Load existing comments into the custom sidebar section\n        const loadComments = () => {\n            $('.custom-comments-section').empty(); // Clear existing comments\n            frappe.call({\n                method: \"frappe.client.get_list\",\n                args: {\n                    doctype: \"Comment\",\n                    fields: [\"name\", \"content\", \"comment_by\"],\n                    filters: {\n                        reference_doctype: frm.doc.doctype,\n                        reference_name: frm.doc.name\n                    },\n                    order_by: \"creation asc\"\n                },\n                callback: r => {\n                    if (r.message) {\n                        r.message.forEach(comment => {\n                            addOrUpdateComment(comment.name, comment.content, comment.comment_by);\n                        });\n                    }\n                }\n            });\n        };\n\n        // Initial load of comments\n        loadComments();\n\n        // Event handler for editing a comment\n        $(document).off('click', '.edit-comment').on('click', '.edit-comment', function(e) {\n            e.preventDefault();\n            const $comment_div = $(this).closest('.comment');\n            const comment_id = $comment_div.data('comment-id');\n            const comment_text = $comment_div.find('.comment-text').html(); // Get HTML content\n\n            frappe.prompt(\n                [{ fieldtype: 'Text Editor', fieldname: 'comment', label: 'Comment', default: comment_text, reqd: 1 }],\n                values => {\n                    frappe.call({\n                        method: \"frappe.client.set_value\",\n                        args: {\n                            doctype: \"Comment\",\n                            name: comment_id,\n                            fieldname: \"content\",\n                            value: values.comment\n                        },\n                        callback: r => {\n                            if (!r.exc) {\n                                $comment_div.find('.comment-text').html(values.comment); // Preserve HTML formatting\n                                frappe.show_alert({ message: __('Comment updated successfully'), indicator: 'green' });\n                            }\n                        }\n                    });\n                },\n                __('Edit Comment'),\n                __('Submit')\n            );\n        });\n\n        // Event handler for deleting a comment\n        $(document).off('click', '.delete-comment').on('click', '.delete-comment', function(e) {\n            e.preventDefault();\n            const $comment_div = $(this).closest('.comment');\n            const comment_id = $comment_div.data('comment-id');\n\n            frappe.confirm(__('Are you sure you want to delete this comment?'), () => {\n                frappe.call({\n                    method: \"frappe.client.delete\",\n                    args: { doctype: \"Comment\", name: comment_id },\n                    callback: r => {\n                        if (!r.exc) {\n                            $comment_div.remove();\n                            frappe.show_alert({ message: __('Comment deleted successfully'), indicator: 'red' });\n                        }\n                    }\n                });\n            });\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Applicant Profile",
  "enabled": 0,
  "modified": "2024-10-24 12:03:32.550386",
  "module": null,
  "name": "ApplicantProfile_ChildTableCheckForDuplicateSkill",
  "script": "frappe.ui.form.on('applicant_skills', alert('a')\n    //{\n    //skill: function(frm, cdt, cdn) {\n        //var d = locals[cdt][cdn];\n        //$.each(frm.doc.table_name, function(i, row) {\n        //    if (row.duplicate_field_name === d.duplicate_field_name && row.name != d.name) {\n        //       frappe.msgprint('You added already exists on the table.');\n        //       frappe.model.remove_from_locals(cdt, cdn);\n        //       frm.refresh_field('table_name');\n        //       return false;\n        //    }\n        //});\n    //}\n    //}\n);",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Applicant Profile",
  "enabled": 0,
  "modified": "2024-10-24 12:03:47.739934",
  "module": null,
  "name": "ApplicantProfile_MessageAlertSampleScript",
  "script": "frappe.ui.form.on('Applicant Profile', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tmsgprint('Called!!! Client_Script on FORM event=>refresh');\n\t}\n})",
  "view": "Form"
 }
]